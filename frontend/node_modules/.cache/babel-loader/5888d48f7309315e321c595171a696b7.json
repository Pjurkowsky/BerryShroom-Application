{"remainingRequest":"/home/pi/Dev/djangostation2/frontend/node_modules/babel-loader/lib/index.js!/home/pi/Dev/djangostation2/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pi/Dev/djangostation2/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/pi/Dev/djangostation2/frontend/src/components/CardContainer.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/pi/Dev/djangostation2/frontend/src/components/CardContainer.vue","mtime":1645891601000},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1645891062892},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/babel-loader/lib/index.js","mtime":1645891066642},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1645891062892},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1645891046373}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBDYXJkIGZyb20gIi4vQ2FyZCI7CmltcG9ydCBDYXJkUmVsYXkgZnJvbSAiLi9DYXJkUmVsYXkiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNhcmRDb250YWluZXIiLAogIGNvbXBvbmVudHM6IHsKICAgIENhcmQ6IENhcmQsCiAgICBDYXJkUmVsYXk6IENhcmRSZWxheQogIH0sCiAgZW1pdHM6IFtdLAogIHByb3BzOiB7CiAgICBzdGF0aW9uOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgd2hpY2hfcGFyZW50OiBTdHJpbmcKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZVN0YXRlOiBmdW5jdGlvbiBjaGFuZ2VTdGF0ZShzdGF0ZSwgaWQpIHsKICAgICAgdmFyIHVwZGF0ZWRfc3RhdGlvbiA9IHsKICAgICAgICBpbmRleDogaWQsCiAgICAgICAgc3RhdGU6IHN0YXRlCiAgICAgIH07CiAgICAgIHRoaXMuc3RhdGlvbi5yZWxheXNbaWRdLnN0YXRlID0gc3RhdGU7CiAgICAgIGZldGNoKCJodHRwOi8vMTkyLjE2OC44LjE4NDo4MDAwL2FwaS1tdXNoZmFybS9yZWxheS11cGRhdGUvIiArIHRoaXMuc3RhdGlvbi5pbmRleCArICIvIiArIGlkICsgIi8iLCB7CiAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgICAgIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodXBkYXRlZF9zdGF0aW9uKQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICByZXMuanNvbigpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB0aW1lOiBmdW5jdGlvbiB0aW1lKCkgewogICAgICByZXR1cm4gRGF0ZS5wYXJzZSh0aGlzLnN0YXRpb25bImRhdGVfY3JlYXRlZCJdKTsKICAgIH0sCiAgICB2aXNpYmlsaXR5T2ZTdGF0aW9uOiBmdW5jdGlvbiB2aXNpYmlsaXR5T2ZTdGF0aW9uKCkgewogICAgICB2YXIgc2hvdyA9IGZhbHNlOwoKICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnN0YXRpb24uc2Vuc29ycykgewogICAgICAgIGlmICh0aGlzLnN0YXRpb24uc2Vuc29yc1tpXS5zaG93KSB7CiAgICAgICAgICBpZiAodGhpcy5zdGF0aW9uLnNlbnNvcnNbaV0udmFsdWUgIT0gbnVsbCkgewogICAgICAgICAgICAvLyB0aGlzLnN0YXRpb24uc2Vuc29yc1tpXS52YWx1ZXMubGVuZ3RoID4gMCkgIHRhayBieWxvIGdkeSB1enl3YWxlbSBmZXRjaGEgZG8gc3RhdGlvbiBhIG5pZSBkbyBkYXNoYm9hcmQKICAgICAgICAgICAgc2hvdyA9IHRydWU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gc2hvdzsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfQp9Ow=="},{"version":3,"sources":["/home/pi/Dev/djangostation2/frontend/src/components/CardContainer.vue"],"names":[],"mappings":";AA4BA,OAAO,IAAP,MAAiB,QAAjB;AACA,OAAO,SAAP,MAAsB,aAAtB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,eADO;AAEb,EAAA,UAAU,EAAE;AAAE,IAAA,IAAI,EAAJ,IAAF;AAAQ,IAAA,SAAQ,EAAR;AAAR,GAFC;AAGb,EAAA,KAAK,EAAE,EAHM;AAIb,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,QAAQ,EAAE;AADH,KADJ;AAKL,IAAA,YAAY,EAAE;AALT,GAJM;AAWb,EAAA,OAAO,EAAE;AACP,IAAA,WADO,uBACK,KADL,EACY,EADZ,EACgB;AACrB,UAAI,eAAc,GAAI;AACpB,QAAA,KAAK,EAAE,EADa;AAEpB,QAAA,KAAK,EAAE;AAFa,OAAtB;AAIA,WAAK,OAAL,CAAa,MAAb,CAAoB,EAApB,EAAwB,KAAxB,GAAgC,KAAhC;AACA,MAAA,KAAK,CAAC,yDAAyD,KAAK,OAAL,CAAa,KAAtE,GAA8E,GAA9E,GAAoF,EAApF,GAAyF,GAA1F,EAA+F;AAClG,QAAA,MAAM,EAAE,MAD0F;AAElG,QAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFyF;AAKlG,QAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,eAAf;AAL4F,OAA/F,CAAL,CAMG,IANH,CAMQ,UAAC,GAAD,EAAS;AACf,QAAA,GAAG,CAAC,IAAJ;AACD,OARD;AASD;AAhBM,GAXI;AA6Bb,EAAA,QAAQ,EAAE;AACR,IAAA,IADQ,kBACD;AACL,aAAO,IAAI,CAAC,KAAL,CAAW,KAAK,OAAL,CAAa,cAAb,CAAX,CAAP;AACD,KAHO;AAIR,IAAA,mBAJQ,iCAIc;AACpB,UAAI,IAAG,GAAI,KAAX;;AACA,WAAK,IAAI,CAAT,IAAc,KAAK,OAAL,CAAa,OAA3B,EAAoC;AAClC,YAAI,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,EAAwB,IAA5B,EAAkC;AAChC,cAAI,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,EAAwB,KAAxB,IAAiC,IAArC,EAA2C;AACzC;AACA,YAAA,IAAG,GAAI,IAAP;AACF;AACF;AACF;;AACA,aAAO,IAAP;AACD;AAfO,GA7BG;AA8Cb,EAAA,IA9Ca,kBA8CN;AACL,WAAO,EAAP;AACD;AAhDY,CAAf","sourcesContent":["<template>\n  <div v-if=\"which_parent == 'Home'\">\n    <div class=\"station\" v-if=\"visibilityOfStation\">\n      <h2>{{ station.display_name }}</h2>\n      <p class=\"text-muted\">Ostatni odczyt: <timeago :datetime=\"time\" /></p>\n      <div class=\"card-container\">\n        <Card v-for=\"sensor in station.sensors\" :key=\"sensor.index\" :sensor=\"sensor\" :station_id=\"station.index\" />\n      </div>\n    </div>\n  </div>\n  <div v-else-if=\"which_parent == 'Grzybiarnia'\">\n    <div class=\"station\">\n      <h2>{{ station.name }}</h2>\n      <p class=\"text-muted\">Ostatni odczyt: wczoraj</p>\n      <div class=\"card-container\">\n        <CardRelay\n          v-for=\"relay in station.relays\"\n          v-bind:key=\"relay\"\n          :relay=\"relay\"\n          :station_id=\"station.index\"\n          @cardState=\"changeState\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Card from \"./Card\";\nimport CardRelay from \"./CardRelay\";\n\nexport default {\n  name: \"CardContainer\",\n  components: { Card, CardRelay },\n  emits: [],\n  props: {\n    station: {\n      required: true,\n    },\n\n    which_parent: String,\n  },\n  methods: {\n    changeState(state, id) {\n      let updated_station = {\n        index: id,\n        state: state,\n      };\n      this.station.relays[id].state = state;\n      fetch(\"http://192.168.8.184:8000/api-mushfarm/relay-update/\" + this.station.index + \"/\" + id + \"/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updated_station),\n      }).then((res) => {\n        res.json();\n      });\n    },\n  },\n  computed: {\n    time() {\n      return Date.parse(this.station[\"date_created\"]);\n    },\n    visibilityOfStation() {\n      let show = false;\n      for (let i in this.station.sensors) {\n        if (this.station.sensors[i].show) {\n          if (this.station.sensors[i].value != null) {\n            // this.station.sensors[i].values.length > 0)  tak bylo gdy uzywalem fetcha do station a nie do dashboard\n            show = true;\n          }\n        }\n      }\n      return show;\n    },\n  },\n  data() {\n    return {};\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.station {\n  margin-top: 1rem;\n  text-align: center;\n  p {\n    margin-top: 0.2rem;\n    font-size: 15px;\n    min-width: 160px;\n  }\n  h2 {\n    text-align: center;\n    min-width: 160px;\n  }\n  .card-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    grid-template-rows: 0.75fr;\n    column-gap: 30px;\n    row-gap: 30px;\n    min-width: 250px;\n    min-height: 130px;\n    margin: auto;\n  }\n}\n</style>\n"],"sourceRoot":""}]}