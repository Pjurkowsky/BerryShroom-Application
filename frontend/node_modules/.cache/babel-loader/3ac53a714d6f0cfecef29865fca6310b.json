{"remainingRequest":"/home/pi/Dev/djangostation2/frontend/node_modules/babel-loader/lib/index.js!/home/pi/Dev/djangostation2/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pi/Dev/djangostation2/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/pi/Dev/djangostation2/frontend/src/views/SensorChart.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/pi/Dev/djangostation2/frontend/src/views/SensorChart.vue","mtime":1646972786000},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1645891062892},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/babel-loader/lib/index.js","mtime":1645891066642},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1645891062892},{"path":"/home/pi/Dev/djangostation2/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1645891046373}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBTaWRlYmFyIGZyb20gIi4uL2NvbXBvbmVudHMvU2lkZWJhciI7CmltcG9ydCBUb3BiYXIgZnJvbSAiLi4vY29tcG9uZW50cy9Ub3BiYXIiOwppbXBvcnQgQ2hhcnQgZnJvbSAiLi4vY29tcG9uZW50cy9DaGFydCI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBTaWRlYmFyOiBTaWRlYmFyLAogICAgVG9wYmFyOiBUb3BiYXIsCiAgICBDaGFydDogQ2hhcnQKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBmZXRjaCgiaHR0cDovLzE5Mi4xNjguOC4xODQ6ODAwMC9hcGkvc3RhdGlvbi8iICsgdGhpcy5zdGF0aW9uX2lkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMuc3RhdGlvbiA9IGRhdGE7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0U2V0dGluZ3NEYXRhOiBmdW5jdGlvbiBnZXRTZXR0aW5nc0RhdGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgZmV0Y2goImh0dHA6Ly8xOTIuMTY4LjguMTg0OjgwMDAvYXBpLXNldHRpbmdzL3NldHRpbmdzLyIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBfdGhpczIuc2V0dGluZ3MgPSBkYXRhOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNfc2V0dGluZ3M6IGZ1bmN0aW9uIGNfc2V0dGluZ3MoKSB7CiAgICAgIGZvciAodmFyIGkgaW4gdGhpcy5zZXR0aW5ncykgewogICAgICAgIHZhciBzZW5zb3JfZ3JvdXAgPSBKU09OLnBhcnNlKHRoaXMuc2V0dGluZ3NbaV1bImxpc3Rfb2ZfaW5kZXhlcyJdKTsKCiAgICAgICAgZm9yICh2YXIgbiBpbiBzZW5zb3JfZ3JvdXApIHsKICAgICAgICAgIGlmICh0aGlzLnNfaWQgPT0gc2Vuc29yX2dyb3VwW25dLnN0YXRpb25faW5kZXggJiYgdGhpcy5zdGF0aW9uLnNlbnNvcnNbaWRdLmluZGV4ID09IHNlbnNvcl9ncm91cFtuXS5zZW5zb3JfaW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIHNldHRpbmdzW2ldLmNoYXJ0X3NldHRpbmdzOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0YXRpb246IE9iamVjdCwKICAgICAgbmF2T3BlbjogZmFsc2UsCiAgICAgIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQsCiAgICAgIHN0YXRpb25faWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5zdGF0aW9uX2lkLAogICAgICBzZXR0aW5nczogT2JqZWN0CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RGF0YSgpOwogICAgdGhpcy5nZXRTZXR0aW5nc0RhdGEoKTsKICB9Cn07"},{"version":3,"sources":["/home/pi/Dev/djangostation2/frontend/src/views/SensorChart.vue"],"names":[],"mappings":";AAkBA,OAAO,OAAP,MAAoB,uBAApB;AACA,OAAO,MAAP,MAAmB,sBAAnB;AACA,OAAO,KAAP,MAAkB,qBAAlB;AACA,eAAe;AACb,EAAA,UAAU,EAAE;AAAE,IAAA,OAAO,EAAP,OAAF;AAAW,IAAA,MAAM,EAAN,MAAX;AAAmB,IAAA,KAAI,EAAJ;AAAnB,GADC;AAGb,EAAA,OAAO,EAAE;AACP,IAAA,OADO,qBACG;AAAA;;AACR,MAAA,KAAK,CAAC,2CAA2C,KAAK,UAAjD,CAAL,CACG,IADH,CACQ,UAAC,QAAD;AAAA,eAAc,QAAQ,CAAC,IAAT,EAAd;AAAA,OADR,EAEG,IAFH,CAEQ,UAAC,IAAD;AAAA,eAAW,KAAI,CAAC,OAAL,GAAe,IAA1B;AAAA,OAFR,EAGG,KAHH,CAGS,UAAC,GAAD;AAAA,eAAS,OAAO,CAAC,GAAR,CAAY,GAAZ,CAAT;AAAA,OAHT;AAID,KANM;AAOP,IAAA,eAPO,6BAOW;AAAA;;AAChB,MAAA,KAAK,CAAC,kDAAD,CAAL,CACG,IADH,CACQ,UAAC,QAAD;AAAA,eAAc,QAAQ,CAAC,IAAT,EAAd;AAAA,OADR,EAEG,IAFH,CAEQ,UAAC,IAAD;AAAA,eAAW,MAAI,CAAC,QAAL,GAAgB,IAA3B;AAAA,OAFR,EAGG,KAHH,CAGS,UAAC,GAAD;AAAA,eAAS,OAAO,CAAC,GAAR,CAAY,GAAZ,CAAT;AAAA,OAHT;AAID;AAZM,GAHI;AAiBb,EAAA,QAAQ,EAAE;AACR,IAAA,UADQ,wBACK;AACX,WAAK,IAAI,CAAT,IAAc,KAAK,QAAnB,EAA6B;AAC3B,YAAI,YAAW,GAAI,IAAI,CAAC,KAAL,CAAW,KAAK,QAAL,CAAc,CAAd,EAAiB,iBAAjB,CAAX,CAAnB;;AACA,aAAK,IAAI,CAAT,IAAc,YAAd;AACE,cACE,KAAK,IAAL,IAAa,YAAY,CAAC,CAAD,CAAZ,CAAgB,aAA7B,IACA,KAAK,OAAL,CAAa,OAAb,CAAqB,EAArB,EAAyB,KAAzB,IAAkC,YAAY,CAAC,CAAD,CAAZ,CAAgB,YAFpD,EAGE;AACA,mBAAO,QAAQ,CAAC,CAAD,CAAR,CAAY,cAAnB;AAEF;AAPF;AAQF;AACD;AAbO,GAjBG;AAgCb,EAAA,IAhCa,kBAgCN;AACL,WAAO;AACL,MAAA,OAAO,EAAE,MADJ;AAEL,MAAA,OAAO,EAAE,KAFJ;AAGL,MAAA,EAAE,EAAE,KAAK,MAAL,CAAY,MAAZ,CAAmB,EAHlB;AAIL,MAAA,UAAU,EAAE,KAAK,MAAL,CAAY,MAAZ,CAAmB,UAJ1B;AAKL,MAAA,QAAQ,EAAE;AALL,KAAP;AAOD,GAxCY;AAyCb,EAAA,OAzCa,qBAyCH;AACR,SAAK,OAAL;AACA,SAAK,eAAL;AACD;AA5CY,CAAf","sourcesContent":["<template>\n  <Sidebar :open=\"navOpen\" @toggleSidebar=\"navOpen = !navOpen\" />\n  <Topbar @toggleSidebar=\"navOpen = !navOpen\" />\n  <a href=\"/\"\n    ><button><i class=\"fas fa-arrow-left\"></i></button\n  ></a>\n  <div class=\"container\">\n    <h2>{{ station.sensors[id].name }}</h2>\n\n    <Chart\n      :sensor=\"station.sensors[id]\"\n      :s_id=\"parseInt(station_id)\"\n      :settings=\"c_settings\"\n    />\n  </div>\n</template>\n\n<script>\nimport Sidebar from \"../components/Sidebar\";\nimport Topbar from \"../components/Topbar\";\nimport Chart from \"../components/Chart\";\nexport default {\n  components: { Sidebar, Topbar, Chart },\n\n  methods: {\n    getData() {\n      fetch(\"http://192.168.8.184:8000/api/station/\" + this.station_id)\n        .then((response) => response.json())\n        .then((data) => (this.station = data))\n        .catch((err) => console.log(err));\n    },\n    getSettingsData() {\n      fetch(\"http://192.168.8.184:8000/api-settings/settings/\")\n        .then((response) => response.json())\n        .then((data) => (this.settings = data))\n        .catch((err) => console.log(err));\n    },\n  },\n  computed: {\n    c_settings() {\n      for (let i in this.settings) {\n        let sensor_group = JSON.parse(this.settings[i][\"list_of_indexes\"]);\n        for (let n in sensor_group)\n          if (\n            this.s_id == sensor_group[n].station_index &&\n            this.station.sensors[id].index == sensor_group[n].sensor_index\n          ) {\n            return settings[i].chart_settings;\n\n          }\n      }\n    },\n  },\n  data() {\n    return {\n      station: Object,\n      navOpen: false,\n      id: this.$route.params.id,\n      station_id: this.$route.params.station_id,\n      settings: Object,\n    };\n  },\n  created() {\n    this.getData();\n    this.getSettingsData();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  margin-top: 2rem;\n}\na {\n  text-decoration: none;\n  button {\n    margin-top: 1rem;\n    position: absolute;\n    left: 10rem;\n    width: 60px;\n    height: 40px;\n    background: #527fb3;\n    border: none;\n    color: white;\n    text-align: center;\n    cursor: pointer;\n    border-radius: 5px;\n    box-shadow: 2px 2px 2px rgba(51, 51, 51, 0.5);\n    font-size: 18px;\n  }\n}\n</style>\n"],"sourceRoot":""}]}